*  Anticipate urls for landing page and for playground landing
*  code the current html thus
*  Update handlers so both produce same page but indi
*  Make default handler also go to quickstart/python
*  Refactor template parsing to in common
*  Make active nav show if in quickstart or playground
*  Design how to split off and delegate rendering of these two pages
*  Get playground to look the part with static content
    *  The header blocks
    *  Some icons
    *  Text Editor in left half
*  Sync


*  Make rendering from model populate both text areas from model using fixed
   models
*  Have refresh post content of lhs
*  Make only chosen urls work others barf
*  Have refresh handler copy input back to input and something based thereon
*  Refactor main / handlers in common?
*  Have refresh handler launch chain to build new display model that echos
   input text and includes some trivial output text
*  Should now have enter-refresh-render cycle

*  Cause the example button selections to stimulate a refresh, parameterised
   with the type of example required.
   *  Link works and handler puts in foo bar with spaces and does refresh
   *  How make default btn send href uri?
   *  How organise differentiation of example type required?
    *  Make space sep handler get content from resource
    *  Add another to refactor commonality in handler

*  Stuff to Paul

o  Next iter - start to design tdd of conversion
    *  Put in more realistic input file
    *  Satisfy up conversion interface
    *  Refactor processors to filereaders
    *  Put the first bit of processing into the whitespace converter
    *  Work the precedence bottom up

    o  tidy up web gui to show paul and carl etc
        *  not happy with playground button layout
        *  make textareas have h scrollbars
        o  layout of panels and wrapping
            o  add option to flip to tabbed view
                *  Restart...
                    *  Design cleaner paradigm
                    *  Upgrade templating both visual and hidden to anticipate
                       needs of model.
                    *  Upgrade the model fields to match demands.
                    *  Work out how to route urls and capture variants
                    o  Introduce routing class
                    o  Try providing template to handlers constructor or init?
                    o  Before get burned, replace strings with consts
                    o  Do model builder but shifted into model class
                        *  Change args to hints string (url)
                        *  Change names to NewXXX
                        *  Move to models package
                        *  Populate model builders
                        *  Change field names to constants
                        o  Unit tests for model view interaction?
                            o  Start with playground view model tests
                                o  How DI example content so can work in test
                                   env?,
                                   
                    o  Get example entry point working with refresh and edit
                       cycle
                    o  Make sure can switch view and persists on refresh or
                       edit
                    o  Make sure can change current tab and persists on refresh
                       or edit
                    o  Make sure link from landing to playground works
                    o  What unit tests should there be

            o  strings in main should be constants
            o  model builders in main should go into models
            o  make sure no unused handlers left behind
            o  does this mean the other playground choices should follow?

        o  unfinished links do something more sensible
        o  edit/refresh cycle should work
        o  try something should work


-----------------------------------------------------------------------------
Scratch
-------------------------------------------------------------------------

-----------------------------------------------------------------------------
URL alternative
-----------------------------------------------------------------------------
URLs
    playground/refresh/side-by-side
    playground/refresh/input-tab
    playground/refresh/output-tab

    playground/example/space
    playbround/example/csv
    playbround/example/etc...

o  Form action will be one of these depending on what sent the page, and
   handles vanilla refresh
o  Switch view button has custom action using one of the urls above
o  Can all be routed to handler in common because handler can look in url for
   hints

-----------------------------------------------------------------------------
Futures
-----------------------------------------------------------------------------

