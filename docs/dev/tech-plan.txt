*  Anticipate urls for landing page and for playground landing
*  code the current html thus
*  Update handlers so both produce same page but indi
*  Make default handler also go to quickstart/python
*  Refactor template parsing to in common
*  Make active nav show if in quickstart or playground
*  Design how to split off and delegate rendering of these two pages
*  Get playground to look the part with static content
    *  The header blocks
    *  Some icons
    *  Text Editor in left half
*  Sync


*  Make rendering from model populate both text areas from model using fixed
   models
*  Have refresh post content of lhs
*  Make only chosen urls work others barf
*  Have refresh handler copy input back to input and something based thereon
*  Refactor main / handlers in common?
*  Have refresh handler launch chain to build new display model that echos
   input text and includes some trivial output text
*  Should now have enter-refresh-render cycle

*  Cause the example button selections to stimulate a refresh, parameterised
   with the type of example required.
   *  Link works and handler puts in foo bar with spaces and does refresh
   *  How make default btn send href uri?
   *  How organise differentiation of example type required?
    *  Make space sep handler get content from resource
    *  Add another to refactor commonality in handler

*  Stuff to Paul

o  Next iter - start to design tdd of conversion
    *  Put in more realistic input file
    *  Satisfy up conversion interface
    *  Refactor processors to filereaders
    *  Put the first bit of processing into the whitespace converter
    *  Work the precedence bottom up

    o  tidy up web gui to show paul and carl etc
        *  not happy with playground button layout
        *  make textareas have h scrollbars
        o  entry point to playground should stimulate space sep example and sim
        o  layout of panels and wrapping
            o  add option to flip to tabbed view
                o  have model state for tabbed or side by side
                o  init to side by side by default
                o  make playground render pick diff sub template depending
                   on model state for side by side
                o  add link in to sub template for side by side that offers
                   switch to tab and calls new handler similar to refresh,
                   except offers switch to side by side
                o  side by side handling follows suit
                o  add hidden field to master form that holds if side by side
                   or not
                o  upgrade no-args refresh handler to consult hidden field for
                   side by side or tabbed
        o  unfinished links do something more sensible
        o  edit/refresh cycle should work
        o  try something should work


-----------------------------------------------------------------------------
Scratch
-----------------------------------------------------------------------------

-----------------------------------------------------------------------------
Futures
-----------------------------------------------------------------------------

